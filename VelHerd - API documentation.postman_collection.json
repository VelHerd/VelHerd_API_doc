{
	"info": {
		"_postman_id": "1ddf267f-33cf-4c39-9377-3f9010722452",
		"name": "VelHerd - API documentation",
		"description": "You can use VelHerd API if you have account on VelHerd web site.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16830233"
	},
	"item": [
		{
			"name": "Reference",
			"item": [
				{
					"name": "Introduction",
					"item": [],
					"description": "## General info\n\nYou can use VelHerd API if you have account on VelHerd web site.\n\nVelHerd API is HTTP JSON API. That means all requests and responses are sent via HTTP protocol (secured with SSL). All data in requests and responses present in HTTP Body in [JSON](http://en.wikipedia.org/wiki/JSON) format.\n\nVelHerd API is based on [REST](http://en.wikipedia.org/wiki/Representational_state_transfer) principles. You have to be authenticated and call the simple HTTPs request on the URLs specified below. The following documentation covers core resources that are used to manipulate the main entities. First of all, read basic instructions to start using the API.\n\n## Very basics of HTTP REST concepts\n\n### Allowed HTTPs request typesemail\n\n- `GET` — Get a resource or list of resources\n    \n- `POST` — To create or update resource\n    \n- `PUT` — To create or update resource\n    \n- `DELETE` — To delete resource\n    \n\n### Usual [HTTP response codes](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes)\n\n- `200 OK` — the request was successful.\n    \n- `201 Created` — the request was successful and a resource was created.\n    \n- `204 No Content` — the request was successful but there is no representation to return (i.e. the response is empty).\n    \n- `400 Bad Request` — the request could not be understood or was missing required parameters.\n    \n- `401 Unauthorized` — authentication failed or user doesn't have permissions for requested operation.\n    \n- `403 Forbidden` — access denied.\n    \n- `404 Not Found` — resource was not found.\n    \n- `422 Unprocessable Entity` - the request was well-formed but was unable to be followed due to semantic errors.\n    \n- `503 Service Unavailable` — service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.\n    \n\n### Methods\n\n- `Resources collection` => `GET` {{baseUrl}}/api/{{apiVersion}}/OBJECTS — get list of objects.\n    \n- `Ids` => `GET` [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)[/OBJECTS/ids](https://velherd.com/api/v1/OBJECTS/ids) — get list of ids for all objects.\n    \n- `Single Resource` => `GET` [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)[/OBJECT/ID](https://velherd.com/api/v1/OBJECT/ID) — get one object by ID.\n    \n- `Create Resource` => `POST` [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)[/OBJECTS](https://operations.cropwise.com/api/v3/OBJECTS) — create new object.\n    \n- `Update Resource` => `PUT/PATCH` [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)[/OBJECTS/ID](https://operations.cropwise.com/api/v3/OBJECTS/ID) — update object by ID.\n    \n- `Delete Resource` => `DELETE` [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)[/OBJECTS/ID](https://operations.cropwise.com/api/v3/OBJECTS/ID) — delete object by ID.\n    \n\n### Useful tools\n\n- Postman ([https://www.getpostman.com](https://www.getpostman.com/)) — multi-platform REST client for API testing.\n    \n- Paw ([https://paw.cloud](https://paw.cloud/)) — beautiful (but MacOS only) REST client.\n    \n- ApiDog ([https://apidog.com](https://apidog.com/)) — a real design-first API development platform.\n    \n\n# Important notice! — read before start using API\n\n1. You should add HTTP Header `Content-Type: application/json` for all `POST` and `PUT` requests. Else, request would be dropped.\n    \n2. VelHerd API works only via HTTPS (SSL). **Important!** — check that you use `https://` in all requests (especially in Authorization request).\n    \n3. In case of wrong request or data, API gives you response with HTTP Error Code and detailed error description (if available). Please read it carefully.\n    \n4. Naming convention for OBJECT in requests: you need to use plural object name in `snake_case`:\n    \n\n- [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)`/animals`\n    \n- [{{baseUrl}}/api/{{apiVersion}}](https://velherd.com/api/v1/OBJECTS)`/company_units`"
				},
				{
					"name": "Authentication",
					"item": [],
					"description": "The user should obtain a USER_API_TOKEN token that is required for all subsequent requests. USER_API_TOKEN is a string, that should be used to generate a JSON Web Token (JWT).\n\nYou can generate USER_API_TOKEN on the user settings page (http://{{baseUrl}}/users/ID/edit_user) in the VelHerd system.\n\n<img src=\"https://content.pstmn.io/0c53717c-e0a0-4026-a521-35c3efe19187/MS5wbmc=\" alt=\"\"><img src=\"https://content.pstmn.io/5e113891-4c01-4820-9c37-40eb78898adb/0JfQvdGW0LzQvtC6INC10LrRgNCw0L3QsCAyMDI1LTA2LTE5INC+IDA0LjQ0LjU1LnBuZw==\" alt=\"\">\n\nWhen you generate a token, you must copy it and save it for future use.\n\n<img src=\"https://content.pstmn.io/4ef2527e-af04-48d2-97cd-3145245859d0/Mi5wbmc=\" alt=\"\">\n\nAfter generating USER_API_TOKEN you can use it to generate a JWT."
				},
				{
					"name": "Authorization",
					"item": [
						{
							"name": "JWToken",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"integration_token\": {\n        \"token\": \"{{userApiToken}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"access_tokens"
									]
								}
							},
							"response": []
						}
					],
					"description": "For authorization, you must generate a JWT. Send a request to {{baseUrl}}/api/access_tokens with USER_API_TOKEN in body.\n\n`{\"integration_token\": {\"token\": \"`USER_API_TOKEN`\"}}`\n\nIn response, you will have a JWT (access_token) that is available for some time (expires_in).\n\n``` json\n{\n    \"access_token\": \n\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJjb21wYW55X2lkIjoyLCJleHAiOjE3NTAyNDk2NzZ9.b3uTIBUYOEHwVFmVkrbWOAXRX9u-0osG0fBPVqU0Q1A\", \n    \"expires_time\": 7200,\n    \"expires_in\": \"2025-06-18T15:27:56.000+03:00\"\n}\n\n ```\n\nAfter generating a JWT (access_token), you can use it in your request. In the header, you must have `Authorization` or `X-Authorization` with value `Bearer access_token`\n\n`Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJjb21wYW55X2lkIjoyLCJleHAiOjE3NTAyNDk2NzZ9.b3uTIBUYOEHwVFmVkrbWOAXRX9u-0osG0fBPVqU0Q1A`"
				}
			]
		},
		{
			"name": "API endpoints",
			"item": [
				{
					"name": "Base Units",
					"item": [
						{
							"name": "get_base_units",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/base_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"base_units"
									]
								},
								"description": "## API Endpoint: Get Farm Units\n\n### Purpose\n\nThis endpoint retrieves a list of farm units from the server. It is useful for clients that need to display or process information related to various farm units available in the system.\n\n### Request Format\n\n- **Method**: GET\n    \n- **URL**: {{baseUrl}}/api/{{apiVersion}}/farm_units\n    \n\n### Response Structure\n\nThe response will contain a JSON object with the following structure:\n\n- **status**: Indicates the success or failure of the request (e.g., \"success\" or \"error\").\n    \n- **data**: An array of farm unit objects, where each object contains:\n    \n    - **id**: Unique identifier for the farm unit.\n        \n    - **name**: Name of the farm unit.\n        \n    - **description**: Description for the farm unit.\n        \n    - **external_id**: External ID for the farm unit.\n        \n    - **active**: Active status. Can be `true` or `false`\n        \n    - **created_at**: Created time\n        \n    - **updated_at**: Updated time\n        \n\n### Example Response\n\n``` json\n{\n    \"data\": [\n        {\n            \"id\": \"1\",\n            \"type\": \"farm_unit\",\n            \"attributes\": {\n                \"id\": 1,\n                \"name\": \"Farm Unit A\",\n                \"description\": null,\n                \"external_id\": null,\n                \"active\": false,\n                \"created_at\": \"2025-06-12T11:43:22.597+03:00\",\n                \"updated_at\": \"2025-06-12T11:43:22.597+03:00\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"type\": \"farm_unit\",\n            \"attributes\": {\n                \"id\": 2,\n                \"name\": \"Farm Unit B\",\n                \"description\": \"Some Description\",\n                \"external_id\": 123,\n                \"active\": true,\n                \"created_at\": \"2025-06-12T12:08:15.653+03:00\",\n                \"updated_at\": \"2025-06-12T14:17:34.497+03:00\"\n            }\n        }\n    ]\n}\n\n ```\n\nThis response provides a structured overview of the farm units, enabling clients to easily access and utilize the information."
							},
							"response": []
						},
						{
							"name": "get_base_unit_ids",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/base_units/ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"base_units",
										"ids"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_base_unit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/base_units/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"base_units",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_base_units_with_filter",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter_params\": {\n        \"is_base\": true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/base_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"base_units"
									]
								}
							},
							"response": []
						}
					],
					"description": "{{baseUrl}}/api/{{apiVersion}}/base_units\n\n---\n\n### BaseUnit has next parameters\n\n- (readonly) `id` — VelHerd ID of BaseUnit\n    \n- (readonly) `name` — name of BaseUnit\n    \n- (readonly) `symbol` — symbol of BaseUnit\n    \n- (readonly) `key` — key of BaseUnit\n    \n- (readonly) `unit_type` — unit_type of BaseUnit\n    \n- (readonly) `base_ratio` — base_ratio of BaseUnit\n    \n- (readonly) `description` — description of BaseUnit\n    \n- (readonly) `external_id` — an optional identifier used to reference this resource in an external system\n    \n- (readonly) `created_at`\n    \n- (readonly) `updated_at`\n    \n\n### Acceptable methods\n\n- `Ids`\n    \n- `Changes`\n    \n- `Single Resource`\n    \n\n### Filters by\n\n`id`, `name`, `is_base`, `external_id`\n\n### Order by\n\n`id`, `is_base`"
				},
				{
					"name": "Farm Units",
					"item": [
						{
							"name": "get_farm_units",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units"
									]
								},
								"description": "## API Endpoint: Get Farm Units\n\n### Purpose\n\nThis endpoint retrieves a list of farm units from the server. It is useful for clients that need to display or process information related to various farm units available in the system.\n\n### Request Format\n\n- **Method**: GET\n    \n- **URL**: {{baseUrl}}/api/{{apiVersion}}/farm_units\n    \n\n### Response Structure\n\nThe response will contain a JSON object with the following structure:\n\n- **status**: Indicates the success or failure of the request (e.g., \"success\" or \"error\").\n    \n- **data**: An array of farm unit objects, where each object contains:\n    \n    - **id**: Unique identifier for the farm unit.\n        \n    - **name**: Name of the farm unit.\n        \n    - **description**: Description for the farm unit.\n        \n    - **external_id**: External ID for the farm unit.\n        \n    - **active**: Active status. Can be `true` or `false`\n        \n    - **created_at**: Created time\n        \n    - **updated_at**: Updated time\n        \n\n### Example Response\n\n``` json\n{\n    \"data\": [\n        {\n            \"id\": \"1\",\n            \"type\": \"farm_unit\",\n            \"attributes\": {\n                \"id\": 1,\n                \"name\": \"Farm Unit A\",\n                \"description\": null,\n                \"external_id\": null,\n                \"active\": false,\n                \"created_at\": \"2025-06-12T11:43:22.597+03:00\",\n                \"updated_at\": \"2025-06-12T11:43:22.597+03:00\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"type\": \"farm_unit\",\n            \"attributes\": {\n                \"id\": 2,\n                \"name\": \"Farm Unit B\",\n                \"description\": \"Some Description\",\n                \"external_id\": 123,\n                \"active\": true,\n                \"created_at\": \"2025-06-12T12:08:15.653+03:00\",\n                \"updated_at\": \"2025-06-12T14:17:34.497+03:00\"\n            }\n        }\n    ]\n}\n\n ```\n\nThis response provides a structured overview of the farm units, enabling clients to easily access and utilize the information."
							},
							"response": []
						},
						{
							"name": "get_farm_unit_ids",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units/ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units",
										"ids"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_farm_unit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_farm_units_with_order",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"order_params\": {\n        \"name\": \"desc\",\n        \"id\": \"asc\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units"
									]
								}
							},
							"response": []
						},
						{
							"name": "get_farm_units_with_filter",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filter_params\": {\n        \"name\": \"Test 2\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units"
									]
								}
							},
							"response": []
						},
						{
							"name": "create_farm_unit",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Test 3\",\n        \"description\": \"Some Description\",\n        \"external_id\": 123,\n        \"active\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units"
									]
								}
							},
							"response": []
						},
						{
							"name": "update_farm_unit",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"description\": \"Some Description\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "destroy_farm_unit",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/{{apiVersion}}/farm_units/3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"{{apiVersion}}",
										"farm_units",
										"3"
									]
								}
							},
							"response": []
						}
					],
					"description": "{{baseUrl}}/api/{{apiVersion}}/farm_units\n\n---\n\n### FarmUnit has next parameters\n\n- (readonly) `id` — VelHerd ID of FarmUnit\n    \n- `name` — name of FarmUnit\n    \n- `description` — country_code of AdminRegion\n    \n- `external_id` — an optional identifier used to reference this resource in an external system\n    \n- `active` — does FarmUnit is active and shows in list\n    \n- (readonly) `created_at`\n    \n- (readonly) `updated_at`\n    \n\n### Acceptable methods\n\n- `Ids`\n    \n- `Changes`\n    \n- `Single Resource`\n    \n- `Create Resource`\n    \n- `Update Resource`\n    \n- `Delete Resource`\n    \n\n### Filters by\n\n`id`, `name`, `active`, `external_id`\n\n### Order by\n\n`id`, `name`"
				}
			],
			"description": "### List of VelHerd API endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://velherd.com"
		},
		{
			"key": "apiVersion",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "userApiToken",
			"value": "USER_API_TOKEN",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "JWToken",
			"type": "string"
		}
	]
}